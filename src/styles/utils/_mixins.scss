// usage: @include transition(opacity visibility);
@mixin transition (
	$properties: all,
	$duration: 0.5s,
	$method: ease,
	$delay: 0s) {
	$value: ();

    @each $property in $properties {		
        @if length($value) > 0 {
			$value: append($value, unquote(",") #{$property} $duration $method $delay);
		}
        @else {
			$value: append($value, #{$property} $duration $method $delay);
		}
	}
	transition: $value;
}

// usage: @include flex(wrap, null, center, center);
@mixin flex($wrap: unset, $direction: normal, $justify: normal, $align: normal) {
	display: flex;
	@include flex-wrap($wrap);
  	@include flex-direction($direction);
  	@include flex-justify($justify);
  	@include flex-align($align);
}
@mixin flex-direction($direction: normal) {
 flex-direction: $direction;
}
@mixin flex-align($align: normal) {
 align-items: $align;
}
@mixin flex-justify($justify: normal) {
	justify-content: $justify;
}
@mixin flex-wrap($wrap: normal) {
	flex-wrap: $wrap;
}

// properties for header/footer elements
@mixin edge-color($edgeColor) {
	height: 3.75rem;
	color: invert($edgeColor);
	background-color: $edgeColor;

	@include flex(unset, unset, space-between, center);
}

@mixin rateList($number) {
	@for $r from 1 to $number+1 {
		.rate-item_#{$r} {
			@extend .rate-item;
			@extend .product__rate;
			@extend .product__rate_midle;
		}
	}
}
